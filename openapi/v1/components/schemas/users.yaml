# User Schemas for OpenAPI v1
# Image & Location Enhancement - Day 1

UserBase:
  type: object
  description: Base user properties (core fields)
  required:
    - id
    - tenant_id
    - name
    - email
  properties:
    id:
      type: string
      format: uuid
      description: User unique identifier
      example: "22222222-2222-2222-2222-222222222222"
    tenant_id:
      type: string
      format: uuid
      description: Tenant this user belongs to
      example: "11111111-1111-1111-1111-111111111111"
    name:
      type: string
      description: User full name
      example: "John Doe"
      minLength: 1
      maxLength: 255
    email:
      type: string
      format: email
      description: User email address
      example: "john.doe@example.com"
    username:
      type: string
      nullable: true
      description: User username (optional)
      example: "johndoe"
    display_name:
      type: string
      nullable: true
      description: User display name (shown in UI)
      example: "John D."
    phone_number:
      type: string
      nullable: true
      description: User phone number
      example: "+62-812-3456-7890"
    status:
      type: string
      enum: [active, inactive, suspended]
      description: User account status
      default: active
    email_verified_at:
      type: string
      format: date-time
      nullable: true
      description: Email verification timestamp
    created_at:
      type: string
      format: date-time
      description: User creation timestamp
    updated_at:
      type: string
      format: date-time
      description: User last update timestamp

UserImageFields:
  type: object
  description: Profile photo fields for user
  properties:
    profile_photo_url:
      type: string
      nullable: true
      format: uri
      description: Full-size user profile photo URL
      example: "http://localhost:8000/storage/users/11111111-1111-1111-1111-111111111111/photo_xyz789.jpg"
    profile_photo_thumb_url:
      type: string
      nullable: true
      format: uri
      description: Thumbnail version of profile photo (300x300)
      example: "http://localhost:8000/storage/users/11111111-1111-1111-1111-111111111111/photo_xyz789_thumb.jpg"
    has_profile_photo:
      type: boolean
      description: Computed accessor - whether user has profile photo
      readOnly: true
      example: true

UserLocationFields:
  type: object
  description: Location fields for user home/work address
  properties:
    home_latitude:
      type: number
      format: double
      nullable: true
      description: User home location latitude
      example: -6.195702
      minimum: -90
      maximum: 90
    home_longitude:
      type: number
      format: double
      nullable: true
      description: User home location longitude
      example: 106.819572
      minimum: -180
      maximum: 180
    home_address:
      type: string
      nullable: true
      description: Human-readable home address (reverse geocoded)
      example: "Jl. Thamrin, Menteng, Jakarta Pusat, DKI Jakarta"
    has_home_location:
      type: boolean
      description: Computed accessor - whether user has home location set
      readOnly: true
      example: true
    home_location_coordinates:
      type: object
      nullable: true
      readOnly: true
      description: Computed accessor - home location as coordinate object
      properties:
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
      example:
        lat: -6.195702
        lng: 106.819572

UserComplete:
  allOf:
    - $ref: '#/UserBase'
    - $ref: '#/UserImageFields'
    - $ref: '#/UserLocationFields'
  description: Complete user resource with all fields

UserListResponse:
  type: object
  description: Paginated list of users
  properties:
    data:
      type: array
      items:
        $ref: '#/UserComplete'
    meta:
      $ref: ./common.yaml#/Pagination

UserRequest:
  type: object
  description: Request body for creating/updating user
  required:
    - name
    - email
  properties:
    name:
      type: string
      minLength: 1
      maxLength: 255
      example: "Jane Smith"
    email:
      type: string
      format: email
      example: "jane.smith@example.com"
    username:
      type: string
      nullable: true
      example: "janesmith"
    display_name:
      type: string
      nullable: true
      example: "Jane S."
    phone_number:
      type: string
      nullable: true
      example: "+62-813-9876-5432"
    password:
      type: string
      format: password
      nullable: true
      description: User password (required for new users)
      minLength: 8
    status:
      type: string
      enum: [active, inactive, suspended]
      default: active
    # Location fields (optional, can be set via user update or dedicated endpoint)
    home_latitude:
      type: number
      format: double
      nullable: true
      minimum: -90
      maximum: 90
    home_longitude:
      type: number
      format: double
      nullable: true
      minimum: -180
      maximum: 180
    home_address:
      type: string
      nullable: true

ProfilePhotoUploadResponse:
  type: object
  description: Response after successful profile photo upload
  properties:
    message:
      type: string
      example: "Profile photo uploaded successfully."
    profile_photo_url:
      type: string
      format: uri
      example: "http://localhost:8000/storage/users/11111111-1111-1111-1111-111111111111/photo_xyz789.jpg"
    profile_photo_thumb_url:
      type: string
      format: uri
      example: "http://localhost:8000/storage/users/11111111-1111-1111-1111-111111111111/photo_xyz789_thumb.jpg"

ProfilePhotoDeleteResponse:
  type: object
  description: Response after successful profile photo deletion
  properties:
    message:
      type: string
      example: "Profile photo deleted successfully."